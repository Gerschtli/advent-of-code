name: Test
on:
  - push
  - pull_request

jobs:
  go:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        directory:
          - lib/go/file
          - 2020/01
          - 2020/03
          - 2020/05
          - 2020/07
          - 2020/09
          - 2020/11
          - 2020/13

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x

      - name: Use cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod      # Module download cache
            ~/.cache/go-build # Build cache (Linux)
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check go fmt
        run: test -z "$(gofmt -l)"
        working-directory: ${{ matrix.directory }}

      - name: Run go test
        run: go test -v ./...
        working-directory: ${{ matrix.directory }}

  rust:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        directory:
          - lib/rust/error
          - lib/rust/file
          - 2020/02
          - 2020/04
          - 2020/06
          - 2020/08
          - 2020/10
          - 2020/12
          - 2020/14

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Use cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check coding style
        run: echo $(pwd); cargo fmt --verbose -- --check
        working-directory: ${{ matrix.directory }}

      - name: Run cargo check
        run: cargo check --verbose
        working-directory: ${{ matrix.directory }}

      - name: Run cargo build
        run: cargo build --verbose
        working-directory: ${{ matrix.directory }}

      - name: Run cargo clippy
        run: cargo clippy --verbose
        working-directory: ${{ matrix.directory }}

      - name: Run cargo test
        run: cargo test --verbose
        working-directory: ${{ matrix.directory }}
